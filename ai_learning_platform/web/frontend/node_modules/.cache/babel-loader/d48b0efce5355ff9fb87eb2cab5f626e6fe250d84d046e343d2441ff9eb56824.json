{"ast":null,"code":"var _jsxFileName = \"/Users/davidortiz/Projects/Fixed_AI_Learning/ai_learning_platform/web/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios to use the token for all requests\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if the user is already logged in\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          // For simplicity, we're not making an actual API call to verify the token\n          // In a production app, you would verify the token with the server\n          setCurrentUser({\n            username: 'admin'\n          });\n        } catch (error) {\n          console.error('Error verifying token:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/token', new URLSearchParams({\n        'username': username,\n        'password': password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      const {\n        access_token\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setCurrentUser({\n        username\n      });\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"qqcYINwVZ2rkZ0V0X+6PxnTV1fk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","checkAuth","username","error","console","logout","login","password","response","post","URLSearchParams","access_token","data","setItem","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/davidortiz/Projects/Fixed_AI_Learning/ai_learning_platform/web/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Configure axios to use the token for all requests\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if the user is already logged in\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          // For simplicity, we're not making an actual API call to verify the token\n          // In a production app, you would verify the token with the server\n          setCurrentUser({ username: 'admin' });\n        } catch (error) {\n          console.error('Error verifying token:', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [token]);\n\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/token', new URLSearchParams({\n        'username': username,\n        'password': password\n      }), {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n\n      const { access_token } = response.data;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setCurrentUser({ username });\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setCurrentUser(null);\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}